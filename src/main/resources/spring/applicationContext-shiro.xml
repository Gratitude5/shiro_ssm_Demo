<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--配置自定义Realm-->
    <bean id="realmCustom" class="com.liuyingke.realm.RealmCustom"/>

    <!--安全管理器-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="realmCustom"/>
    </bean>

    <!--shiro过滤器 核心-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!--Shiro的核心安全接口，这个属性是必须的-->
        <property name="securityManager" ref="securityManager"/>
        <!--登录页面请求地址(身份验证失败跳转的位置)-->
        <property name="loginUrl" value="/toLogin"/>
        <!--登录成功之后的 跳转页面-->
        <property name="successUrl" value="/toHome"></property>
        <!--权限认证失败，则跳转到指定页面-->
        <property name="unauthorizedUrl" value="/toUnauthorized"/>
        <!--Shiro连接约束配置，即过滤器链的定义-->
        <property name="filterChainDefinitions">
            <value>
                <!--过滤器链的执行顺序是自上而下依次匹配，如果能匹配上，则不再往下匹配-->
                <!--roles 和 perms只能存在一个 谁在下面谁生效-->
                <!--authc:必须要验证
                    logout:退出
                    anon:匿名随意访问
                    roles[xxx]:只有角色是xxx的用户可以访问此路径
                    perms[xxx]:只有有xxx权限的用户可以访问此路径
                -->
                <!--静态文件-->
                /css/*=anon
                /lib/*=anon
                /views/*=anon
                /doLogin=anon
                /doLogout=logout
                /toAdmin=roles[系统管理员]
                /toUserAdd=perms["user:add"]
                /toUserShow=perms["user:show"]
                /**=authc

            </value>
        </property>
    </bean>
    <!--保证实现了Shiro内部lifecycle函数的bean执行-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"></bean>

    <!--开启Shiro注解-->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!--AOP式方法级权限检查-->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
    depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"/>
    </bean>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

</beans>